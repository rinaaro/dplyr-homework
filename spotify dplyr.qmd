---
title: "spotify dplyr"
author: "Arina Agaronyan"
format: 
  html: 
    echo: false 
---


```{r config}
#| message: false
here::i_am("dplyr homework.Rproj")
library(here)
library(ggplot2)
theme_set(theme_bw())
library(dplyr)
library(tidyr)
library(knitr)
options(dplyr.summarise.inform = FALSE)
library(kableExtra)
```


## Exercise 1

```{r load_spotify}
spotify <- readRDS(here("top-spotify-songs-from-20102019-by-year.Rds"))
```



### Q1

```{r q1}
n_song <- spotify %>% distinct(title)
n_artist <- spotify %>% distinct(artist)
n_genre <- spotify %>% distinct(`top genre`)
```

The data set contains `r nrow(n_song)` songs, `r nrow(n_artist)` artists, and `r nrow(n_genre)` musical genres.



### Q2

```{r n_songs_per_year}
kable(spotify %>% count(year), col.names = c("Year", "Number of songs"), caption = "Number of songs on the spotify top song charts per year", align = "cr")
```



### Q3

```{r pop_artist}
n_song_all <- spotify %>% distinct(title, .keep_all = TRUE)
sp_stats <- n_song_all |>
  group_by(artist) |>
  summarise(N=n()) |>
  slice_max(order_by = N)
```

The most popular artist is `r sp_stats[1]`, with `r sp_stats[2]` individual songs on the spotify top song charts.



### Q4

```{r bpm_stats}
kable(n_song_all |>
  group_by(`top genre`) |>
  summarise(min(bpm), max(bpm), mean(bpm), median(bpm), "Number of songs"=n()), caption = "Minimum, maximum, mean and median bpm for each musical genre", align = "lccccc", col.names = c("Musical genre", "Minimum", "Maximum", "Mean", "Median", "Number of songs"), digits = 0) %>%
  add_header_above(c(" " = 1, "bpm" = 4, " " = 1))
```



### Q5

```{r nrg_stats}
nrg_dnc_stats <- spotify |>
  group_by(year) |>
  summarise("Energy"=median(nrgy), "Danceability"=median(dnce))
```
A data frame including the median energy and the median danceability per year.



### Q6

```{r longer_nrgy_stats}
longstats <- 
  nrg_dnc_stats |>
  pivot_longer(-year, names_to = "Statistic")
```

```{r longstats_nrg}
ggplot(longstats, aes(x=year, y=value, group=Statistic, color=Statistic))+
  geom_line() +
  labs(title = "Temporal evolution of the median annual energy and the
median annual danceability.", x = "Year", y = " Median") +
  scale_x_continuous(breaks=seq(2010,2019,2))
```



## Exercise 2

```{r load_dropout}
dropout <- readRDS(here("dropout.rds"))
```



### Q1

```{r med_age}
med_age <- 
  dropout |>
  group_by(Gender, `Marital status`) |>
  summarise(median(`Age at enrollment`))
```
A data frame including the median Age at enrollment, conditioned both on the Gender and on the Marital status.
  


### Q2
  
```{r med_age_table}
kable(med_age|>
  pivot_wider(names_from = Gender, values_from = `median(\`Age at enrollment\`)`), caption = "Median age at enrollment by marital status and gender", align = "lcc", digits = 0) %>%
  add_header_above(c(" " = 1, "Gender" = 2))
```



### Q3

```{r mean_curr}
curr_mean <- 
  dropout |>
  group_by(Target) |>
  summarise(across(starts_with("Curricular"), mean))
```
A data frame including the conditional mean of all variables related to Curricular units, given the value of the Target variable.



### Q4

```{r curr_mean_table}
kable(curr_mean|>
  pivot_longer(-Target, names_to = "Units") |>
  pivot_wider(names_from = Target),  caption = "Mean curricular units per target", digits = 2, align = "lccc")
```